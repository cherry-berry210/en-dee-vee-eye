---
title: "Untitled"
format: html
editor: visual
---

### Packages

```{r}
library(tidyverse)
library(dplyr)
library(readxl)
library(scales)
library(sjPlot)
library(lmerTest)
library(grateful)
library(rtide)
library(weathermetrics)
```

### Import Data Cleaning

dawg what the flip flop was i doing with this project

It has been like 2 months send help

#### Amy help chunk here

```{r}
library(readxl)

### Data from Bight plus NDVI data merged in GIS software; needs tidying maybe
cleaning_sheet <- read_excel("four_ndvi_inc.xlsx") %>% rename(estuaryname = estuary)

#older more complete data
FourEstuaries_forCherry_new <- read_csv("FourEstuaries_forCherry_May24.csv") 

names(cleaning_sheet)

Temporary <- FourEstuaries_forCherry_new %>% 
  left_join(select(cleaning_sheet, estuaryname, stationno, transectreplicate, plotreplicate, NDVI))
```

#Research Questions

```{r}
Temporary
```

## Cordgrass pct cover x NDVI

```{r}
Temporary %>% ggplot(aes(x = estimatedcover, y = NDVI, color= habitat)) + geom_point()
```

```{r}
Temporary %>% ggplot(aes(x = vegetated_cover, y = NDVI, color = habitat)) + geom_point()

```

HOPEFULLY DON'T NEED THIS CHUNK ANYMORE THANKS TO UPSTREAM DATA CLEANING

```{r}
cleaning_sheet <- cleaning_sheet |>
  mutate(raw_total_stems = case_when(raw_total_stems < 0 ~ 0, TRUE ~ raw_total_stems)) |>
  mutate(stem_density = case_when(stem_density == 1 & raw_total_stems != 1 ~ 0, TRUE ~ stem_density)) |> #
  mutate(stem_density = case_when(stem_density < 0 ~ 0, TRUE ~ stem_density)) |> # sets negative densities to 0
  mutate(stem_density = case_when(stem_density > 0 & raw_total_stems == 0 ~ 0, TRUE ~ stem_density)) #will set density records to 0 if stem total is 0

cleaning_sheet <- cleaning_sheet |>
  mutate(stationid = case_when(estuary == "Newport Bay" ~ "LosAngeles", TRUE ~ "LaJolla"))


cleaning_sheet |> write_csv(file = "notide_cordgrass_data.csv")
```

## Tide data viewing/cleaning chunks

#### Load CSV files

```{r}
LJ_Station <- read.csv("LaJolla_Tide_Aerial2022.csv")
LA_Station <- read.csv("LosAngeles_Tide_Aerial2022.csv")

LJ_Station <- LJ_Station |>
  mutate(stationid = "LaJolla")

LA_Station <- LA_Station |>
  mutate(stationid = "LosAngeles") |>
  rename(verified_ft = verified_.ft)
```

```{r}
cleaning_sheet
tide_data
```

#### Editing chunk

```{r}
tide_data <- merge(LJ_Station, LA_Station, all = TRUE)

tide_data <- tide_data |>
  group_by(date) |>
  mutate(tide_ht = mean(verified_ft)) |>
  slice_head(n = 1) |>
  ungroup() |>
  select(stationid, tide_ht)

full_cordgrass <- full_join(cleaning_sheet, tide_data)
```

------------------------------------------------------------------------

Cherry's work \^

------------------------------------------------------------------------

OLD Amy's work, see CleaningForCherry_May24.qmd instead v

## Next Section

```{r}
names(metadata)


unique(metadata$projectid)


metadata |> filter(projectid == "Bight-Estuary-23")
```

```{r}
cordgrass |>  names()

cordgrass$method |> unique()

cordgrass |> 
  filter(estuaryname == "Newport Bay") |> 
  select(stationno, transectreplicate, plotreplicate) |> 
  distinct() |> 
  group_by(stationno, transectreplicate) |> 
  count()


vegetation_data_2023 <- read_excel("vegetation-data-2023.xlsx", 
    sheet = "tbl_vegetativecover_data")



```

```{r}
vegetation_data_2023 |> 
  filter(estuaryname == "Newport Bay") |> 
  select(stationno, transectreplicate, plotreplicate) |> 
  distinct() |> 
  group_by(stationno, transectreplicate) |> 
  count()
```

```{r}
cordgrass |> filter(estuaryname == "Newport Bay") |> 
  group_by(stationno, transectreplicate, plotreplicate) |> 
  summarize(
    total_stems = mean(total_stems, na.rm = TRUE),
    avg_ht = mean(plantheight_cm, na.rm = TRUE)
  ) |> 
  full_join(GPS_4_ALL) |> 
  mutate(total_stems = case_when(
    is.na(total_stems) == TRUE ~ 0,
    is.na(total_stems) == FALSE ~ total_stems
  ),avg_ht = case_when(
    is.na(avg_ht) == TRUE ~ 0,
    is.na(avg_ht) == FALSE ~ avg_ht
  ))


vegetation_data_2023 |> filter(estuaryname == "Newport Bay" & scientificname == "Spartina foliosa" & live_dead == "Live") |> 
  group_by(stationno, transectreplicate) |> 
count()



vegetation_data_2023 |> filter(estuaryname == "Newport Bay") |> 
  select(stationno, transectreplicate, plotreplicate, ) |> 
  distinct()


GPS_4_ALL <- metadata |> filter(estuaryname == "Newport Bay") |> 
  select(stationno, transectreplicate, plotreplicate, latitude, longitude) |> 
  distinct()

```
